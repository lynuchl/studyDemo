1.操作系统作为计算机系统资源的管理者:(1)处理机管理;(2)存储器管理;(3)文件管理;(4)设备管理。

2.操作系统的分类:(1)手工操作阶段(此阶段无操作系统)(2)批处理操作系统;(单道批处理系统)(多道批处理)(3)分时操作系统(4)实时操作系统(5)网络操作系统，分布式计算机系统。(6)个人计算机操作系统

3.CPU执行两种不同性质的程序，一种是操作系统内核的程序(1.时钟管理；2.中断机制;3.原语(可被调用的公共小程序，各自完成一个规定的操作)；4.系统控制的数据结构及处理)，一种是用户自编程序或系统外层的应用程序。

4.进程是操作系统的资源分配和独立运行的基本单位。它一般有以下三个部分组成:(1).进程控制块，(2)程序段，(3)数据段

5.进程的通信:(1)共享存储(甲乙有一个大麻袋，甲放数据完毕后，然后乙去取)(2)消息传递(又分为直接传递(甲告诉乙某些事情，通过写信，然后给邮差直接送给乙)，和间接传递(邮差送到乙家的邮箱里，乙然后再去取))
(3)管道通信:所谓管道,是指用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件。是半双工通信。

6.端口号和进程号之间的联系
  我叫张三，我有2个手机号码。你叫李四，你有1个手机号码。我用其中一个手机给你打电话，这就是我的一个端口和你的端口通信，手机号码就是端口号。我和你就是2个计算机上的进程。进程ID是由操作系统内核进行分配和管理的，  
而端口号是由通讯协议内核分配并进行管理的。至于端口号和进程ID的对应关系则是由通讯协议在分配端口时记录进程ID，并维持一张对应表进行管理。这是电信公司的任务！

7.进程的目的是为了使多个程序并发执行，改善资源的利用率。而引入线程是在进程的层次上提供了一层并发的抽象，减少并发的时间和空间，

8.进程和线程的比较:
 (1).调度 在线程没有引入前，拥有资源的基本单位和独立调度及分配的基本单位都是进程。引入线程后，进程是资源分配的基本单位，线程是调度和分派的基本单位。
 (2).并发性 进程和线程都具有并发性，可以并发执行。 
 (3)资源 .进程是拥有资源的独立单位，线程一般不拥有自己的资源。但是线程可以共享进程资源。例如，进程通过调度可以从处理器获得资源，而线程只能访问该进程里的资源。 
 (4).系统开销 创建和撤销进程都需要回收或分配资源，所以进程创建和撤销的时间大于线程。线程的实现 用户级线程 用户级线程只存在用户级，与内核无关，内核不知道这种线程的存在。内核级线程 系统的调度是基于线程的，
 也就是说，处理记得切换是以线程为单位进行的。
 (5)调度的区别 用户级线程：由于内核不知道该线程的存在，所以，在系统眼里只有进程，即一个多线程的进程，只能一次在一个核心运行。假设一个进程有两个用户级线程A,B，进程A运行时，进程B不能运行，只能等待A进程执行完
 才能执行B.如果进程A阻塞，那么系统就会认为整个进程就被阻塞，进程里的其他线程就全部阻塞。
 内核级线程：由系统内核调度线程，系统无需考虑该线程属于哪个进程。当进程中的一个线程被阻塞了，但是其他线程不会被阻塞，会继续执行其他线程。
 比较 内核级线程克服了用户级线程的两个不足。首先，在多处理机环境中，内核可以同时把同一个进程的多个线程分配到多个处理机上；再者，如果进程中的一个线程被阻塞，内核可以调度一个进程的另一个线程执行。除此之外，
 内核级线程的另一个优点是内核本身也可以设计成多线程。 相对于用户级线程，内核级线程的主要缺点是，在同一个进程中把控制权从一个线程切换给另一个线程需要内核的状态转换(即用户态到核心态的转换)，
 内核级线程切换的代价比用户级线程大得多。

 9.典型的调度算法:(1)先来先服务(2)短作业优先(3)优先级调度算法(4)高响应比优先调度算法(5)时间片流转调度算法(6)多级反馈队列调度算法

 10.处理机的调度层次:(1)作业调度(2)中级调度(3)进程调度。

 11.进程同步:(1)临界资源(必须互斥访问)(2)进程的同步关系(3)进程的互斥关系

 12.信号量机构是一种功能较强的机制,可以用来解决互斥和同步的问题。又分为(1)整型信号量(2)记录型信号量。

 13.死锁:产生的原因有(1)系统资源的竞争,(2)进程推进顺序非法
        产生的必要条件(1)互斥条件(2)不剥夺条件(3)请求和保持(4)循环等待
        避免死锁的方法:(1)死锁预防，(2)死锁避免,(3)死锁检测和解除
