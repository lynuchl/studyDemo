1.在实际的开发中，应该做到编译器不依赖，运行时才依赖。其实IOC的解耦实际上是降低编译期的依赖，但是在执行期是不会改变的，这样做的目的是为了代码好维护修改，但并不是提高系统执行效率。

2.获取类对象:(1)object.getClass(),(2)利用类.class,(3)利用Class类的static方法。在反射中，所有的对象都用object表示，所以通过反射获得了对象后，并不能直接调用其方法，而是通过Class对象调用其中所有的
方法后使用Method.invoke(object)进行调用。

3.工厂模式解耦:利用反射的方式，获取实例化对象，不需要直接创建的方式。

4.beanFactory和ApplicationContext的区别:前者创建对象的延迟加载的方式，即什么时候使用什么时候利用反射的方式创建对象，是单例模式。后者是加载容器的时候创建，是多例，也可以是单例，使用scope属性标识。

5.xml配置步骤:(1)创建对象(2)注入数据(3)改变作用范围(4)生命周期相关。那么相应的注解有:(1)@Component用于在指定类创建依赖对象,其中@autowire，@qualifier,需要和前者搭配@resource。其中对于基本类型，和
String类型只能是用@value注解。

6.@bean注解表示将方法的返回值放进spring ioc容器中。当使用注解配置方法，spring框架会去容器中查找是否有可用的bean对象，