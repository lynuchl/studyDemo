1.Tomcat服务器是一种Servlet容器,Servlet是一种运行在支持Java语言的服务器上的组件。Servlet最常见的用途是扩展Java Web服务器功能，提供非常安全的，可移植的，易于使用的CGI替代品。它是一种动态加载的模块，
它为来自Web客户请求提供服务，它完全依赖Java虚拟机上。

2.tomcat即可以采用开放式目录结构的Web应用，也可以运行WAR文件。

3.在数据库操作中，一项事务是指由一条或多条对数据库更新的SQL语句所组成的一个不可分割的工作单元。只有当事务中的所有操作都正常完成，整个事务才被提交到数据库；如果一项没有完成，就必须撤销整个事务。

4.数据库连接池，为了避免在访问数据库时，不停的建立通信连接，而有的技术。JNDI(java naming and directory interface)来获取DataSource引用。此数据源的配置涉及修改server.xml和web.xml的修改。

5.Session：记录客户访问的信息，客户访问时，服务端创建sessionid然后保留到客户端的cookie中。当客户端不支持cookie时，使用重写URL的方式。

6.session的持久化。借用了java技术的序列化和反序列化技术。java序列化技术就是把对象转换成一串由二进制字节组成的数组，然后将这二进制数据保存在磁盘或传输网络。而后需要这些对象时，磁盘或者网络接收者可以通过
反序列化得到此对象，达到对象持久化的目的。

7.在内存上，对象就是一个内存块，存放了相关的数据集合！对象的本质就是一种数据的组织方式。类可以看作是一个图纸或者模板，对象对应的是具体的事物。

8.安全域是tomcat服务器用来保护WEB应用资源的一种机制，在安全域中可以配置安全验证信息，即用户信息以及用户和角色的映射关系。

9.web验证方法:基本验证，摘要验证，基于表单的验证。

10.先为web配置安全约束，然后配置内存域(配置的内容加载到内存中)，JDBC域和数据源域(用数据库表的形式存储配置信息)。

11.tomcat阀值能够对catalina容器接收的HTTP请求进行预处理。其中，1.客户访问日志阀可以将客户的信息写到日志文件中，这些日志可以记录网页的访问次数，用户的会话活动和用户的验证信息等。2.远程地址过滤器可以根据
远程客户的IP地址来决定是否接受客户的请求。3.客户请求记录器。用于将客户请求的详细信息记录到日志文件中。

12.servlet过滤器能够对servlet容器的请求和响应对象进行检查和修改。其本身并不生成请求和响应对象，它只提供过滤作用。servlet过滤器能够在servlet呗调用之前检查Request,修改request header 和request的内容。

13.在struts中，模型标识引用程序的状态和业务逻辑。客户请求是通过ActionServlet控制器处理和转发的。对于采用struts框架的web应用，在WEB应用启动时就会加载并初始化控制器ActionServlet,其从struts-config.xml
文件中读取配置信息，把它们放到ActionMapping对象中。通过控制器创建action实例对象。

14.log4j由三大组件构成，Logger(控制日志信息的输出),Appender(决定日志的输出目的地)和Layout(日志的输出格式).在程序中使用log4j非常方便，只要先取得日志记录器，然后读取配置文件并配置Log4j环境即可。