server:
  port: 16002
  servlet:
    # 应用的访问根路径
    context-path: /javaDemo

#多配置文件，配置激活的目标
spring:
  profiles:
    active: data,addConf
## 2.6.x版本的spingboot不兼容swagger某些版本,需要添加的配置。
  mvc:
    pathmatch:
     matching-strategy: ant_path_matcher
management:
  server:
    port: 16002
  endpoints:
    web:
      exposure:
        include: '*'
     #启用配置里的info开头的变量
#  info:
#    env:
#      enabled: true
  endpoint:
    health:
#      enabled: true
      show-details: always
#  datasource:
#    druid:
#      test-while-idle: false

#多数据源的时候，此配置无效，且报错，暂时未发现原因。
原因猜想：多数据源的时候因配置原因，会重复注入，导致mapper对象未注入，所以目前这种多数据源配置的情况只能使用默认配置，
那么要解决这种问题，1、去除多数据源配置 2、修改多数据的conf配置文件
#mybatis:
#  mapper-locations: classpath:mybatis/mapper/**/*.xml
#  type-aliases-package: lynu.chaohl.SpringbootIntegration.ServerBaseDemo.mapper
#  datasource:
#  #mybatis连接配置
#    driver-class-name: org.h2.Driver
##    schema: classpath:db/schema-h2.sql
##    data: classpath:db/data-h2.sql
#        # No restrictions on table names
#    url: jdbc:h2:mem:h2
#        # No restrictions on username and password
#    username: root
#    password: 123
#  datasource:
##  mybatis连接配置
#    driver-class-name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8&useSSL=true
#    username: root
#    password: 123456
## H2数据库连接配置、不做配置时、按照默认配置。
#    driver-class-name: org.h2.Driver
#    schema: classpath:db/schema-h2.sql
#    data: classpath:db/data-h2.sql
#        # No restrictions on table names
#    url: jdbc:h2:mem:h2
#        # No restrictions on username and password
#    username: root
#    password: 123


#使用配置文件,配置数据
#auto:
#  field:
#    name: chaohl
#    title: chaohlDemo
##    参数间引用
#    desc: ${auto.field.name}正在做${auto.field.title}
##    生成随机值
#    randomValue: ${random.value}

